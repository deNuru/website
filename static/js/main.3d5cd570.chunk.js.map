{"version":3,"sources":["Components/homepage.js","Components/aboutme.js","Components/contact.js","Components/projects.js","Components/resume.js","Components/main.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","style","width","height","lib","className","col","Component","About","Contact","Projects","Resume","Main","react_router","exact","path","component","HomePage","AboutMe","App","title","scroll","react_router_dom","to","main","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iMAyBeA,mLApBP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACC,MAAO,OAAQC,OAAQ,SAChCL,EAAAC,EAAAC,cAACI,EAAA,KAAD,CAAMC,UAAU,aACZP,EAAAC,EAAAC,cAACI,EAAA,KAAD,CAAME,IAAK,IAEPR,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACXP,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,2EACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,4BAXxBE,aCSJC,mLARP,OACIV,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,mCAJIO,aCULE,mLARP,OACIX,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,kCAJMO,aCUPG,mLARP,OACIZ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,mCAJOO,aCURI,mLARP,OACIb,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,iCAJKO,qBCgBNK,EAVF,kBACTd,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACIf,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjCnB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAWE,IAClCpB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAWP,IAClCX,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWN,IACnCZ,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWL,cCgH1BQ,mLAtHX,OACErB,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,oBACbP,EAAAC,EAAAC,cAACI,EAAA,OAAD,KACEN,EAAAC,EAAAC,cAACI,EAAA,OAAD,CAAQC,UAAU,eAAee,MAAM,QAAQC,QAAM,GACnDvB,EAAAC,EAAAC,cAACI,EAAA,WAAD,KACEN,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAG,WAAT,UACAzB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAG,YAAT,YACAzB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAG,aAAT,YACAzB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAG,YAAT,aAGJzB,EAAAC,EAAAC,cAACI,EAAA,OAAD,CAAQgB,MAAM,SACZtB,EAAAC,EAAAC,cAACI,EAAA,WAAD,KACEN,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAG,WAAT,UACAzB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAG,YAAT,YACAzB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAG,aAAT,YACAzB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAG,YAAT,aAGJzB,EAAAC,EAAAC,cAACI,EAAA,QAAD,KACEN,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBACfP,EAAAC,EAAAC,cAACwB,EAAD,iBAzBIjB,aCMEkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,yECTNC,IAASC,OACLjC,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACIxB,EAAAC,EAAAC,cAACgC,EAAD,OAEFC,SAASC,eAAe,SDoHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.3d5cd570.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Grid, Cell } from 'react-mdl'\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return(\r\n            <div style={{width: '100%', height: 'auto'}}>\r\n                <Grid className=\"home-grid\">\r\n                    <Cell col={12}>\r\n                        \r\n                        <div className=\"banner-text\">\r\n                            <h1>Computer Engineering Student</h1>\r\n                            <hr/>\r\n                            <p>C++ | C | Python | Java | Embedded Systems | Assembly Language</p>\r\n                            <div className=\"social-links\">\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </Cell>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h1>About Me Page</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About","import React, { Component } from 'react';\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h1>Contact Page</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact","import React, { Component } from 'react';\r\n\r\nclass Projects extends Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h1>Projects Page</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Projects","import React, { Component } from 'react';\r\n\r\nclass Resume extends Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h1>Resume Page</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resume","import React from 'react';\r\nimport HomePage from './homepage';\r\nimport AboutMe from './aboutme';\r\nimport Contact from './contact';\r\nimport Projects from './projects';\r\nimport Resume from './resume';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nconst Main = () => (\r\n    <Switch>\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <Route path=\"/aboutme\" component={AboutMe} />\r\n        <Route path=\"/contact\" component={Contact} />\r\n        <Route path=\"/projects\" component={Projects} />\r\n        <Route path=\"/resume\" component={Resume} />\r\n    </Switch>\r\n)\r\n\r\nexport default Main;","import React, {Component} from 'react';\nimport './App.css';\nimport { Layout, Header, Navigation, Drawer, Content } from 'react-mdl';\nimport Main from './Components/main';\nimport { Link } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        {/* Uses a header that scrolls with the text, rather than staying locked at the top */}\n        <div className=\"demo-big-content\">\n          <Layout>\n            <Header className=\"header-color\" title=\"Title\" scroll>\n              <Navigation>\n                <Link to=\"/resume\">Resume</Link>\n                <Link to=\"/aboutme\">About Me</Link>\n                <Link to=\"/projects\">Projects</Link>\n                <Link to=\"/contact\">Contact</Link>\n              </Navigation>\n            </Header>\n            <Drawer title=\"Title\">\n              <Navigation>\n                <Link to=\"/resume\">Resume</Link>\n                <Link to=\"/aboutme\">About Me</Link>\n                <Link to=\"/projects\">Projects</Link>\n                <Link to=\"/contact\">Contact</Link>\n              </Navigation>\n            </Drawer>\n            <Content>\n              <div className=\"page-content\" />\n              <Main/>\n            </Content>\n          </Layout>\n        </div>\n      </div>\n    );\n  }\n  \n  // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Hi, I\\'m a React App!!!'));\n}\n\n/*class App extends Component {\n  state = {\n    persons: [\n      {name: 'Richard', age: 23}, \n      {name: 'Kevin', age: 25},\n      {name: 'Nick', age: 29}\n    ],\n    otherState: 'some other value'\n  }\n\n  switchNameHandler = (newName) => {\n    //console.log(\"Was clicked!\");\n    // DON'T DO THIS: this.state.persons[0].name = 'DIO';\n    this.setState({\n      persons: [\n        {name: newName, age: 23}, \n        {name: 'Kevin', age: 25},\n        {name: 'Nick', age: 31}\n      ]\n    })\n  }\n\n  nameChangedHandler = (event) => {\n    this.setState({\n      persons: [\n        {name: event.target.value, age: 23}, \n        {name: 'Kevin', age: 25},\n        {name: 'Nick', age: 31}\n      ]\n    })\n  }\n\n  render() {\n\n    const style = {\n      backgroundColor: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer'\n    };\n\n    return (\n      <div className=\"App\">\n        <h1>Hi, I'm a React App</h1>\n        <p>This is really working!</p>\n        <button \n          style={style}\n          onClick={() => this.switchNameHandler('MUAHAHHAHAHAAHA')}>Switch Name</button>\n        <Person \n          name={this.state.persons[0].name} \n          age={this.state.persons[0].age}\n          click={this.switchNameHandler.bind(this, 'DIOS MIOS!')}\n          changed={this.nameChangedHandler}>ZA WORLDO!</Person>\n        <Person \n          name={this.state.persons[1].name} \n          age={this.state.persons[1].age}>ORA ORA ORA ORA ORA!</Person>\n        <Person \n          name={this.state.persons[2].name} \n          age={this.state.persons[2].age}>NANI!?</Person>\n      </div>\n    );\n  }\n  \n  // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Hi, I\\'m a React App!!!'));\n}*/\n\n/* <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> \n    </div> */\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}